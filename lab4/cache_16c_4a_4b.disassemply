
cache_16c_4a_4b.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <cache_init>:
   0:	41 55                	push   %r13
   2:	be 08 00 00 00       	mov    $0x8,%esi
   7:	bf 00 04 00 00       	mov    $0x400,%edi
   c:	41 54                	push   %r12
   e:	55                   	push   %rbp
   f:	53                   	push   %rbx
  10:	48 83 ec 08          	sub    $0x8,%rsp
  14:	c7 05 00 00 00 00 04 	movl   $0x4,0x0(%rip)        # 1e <cache_init+0x1e>
  1b:	00 00 00 
  1e:	c7 05 00 00 00 00 00 	movl   $0x4000,0x0(%rip)        # 28 <cache_init+0x28>
  25:	40 00 00 
  28:	c7 05 00 00 00 00 04 	movl   $0x4,0x0(%rip)        # 32 <cache_init+0x32>
  2f:	00 00 00 
  32:	c7 05 00 00 00 00 00 	movl   $0x400,0x0(%rip)        # 3c <cache_init+0x3c>
  39:	04 00 00 
  3c:	e8 00 00 00 00       	callq  41 <cache_init+0x41>
  41:	48 85 c0             	test   %rax,%rax
  44:	49 89 c5             	mov    %rax,%r13
  47:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 4e <cache_init+0x4e>
  4e:	0f 84 c6 00 00 00    	je     11a <cache_init+0x11a>
  54:	45 31 e4             	xor    %r12d,%r12d
  57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  5e:	00 00 
  60:	bf 20 00 00 00       	mov    $0x20,%edi
  65:	e8 00 00 00 00       	callq  6a <cache_init+0x6a>
  6a:	48 85 c0             	test   %rax,%rax
  6d:	48 89 c3             	mov    %rax,%rbx
  70:	4b 89 44 25 00       	mov    %rax,0x0(%r13,%r12,1)
  75:	0f 84 9f 00 00 00    	je     11a <cache_init+0x11a>
  7b:	c6 40 10 00          	movb   $0x0,0x10(%rax)
  7f:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
  86:	00 
  87:	bf 20 00 00 00       	mov    $0x20,%edi
  8c:	e8 00 00 00 00       	callq  91 <cache_init+0x91>
  91:	48 85 c0             	test   %rax,%rax
  94:	48 89 c5             	mov    %rax,%rbp
  97:	48 89 43 18          	mov    %rax,0x18(%rbx)
  9b:	74 7d                	je     11a <cache_init+0x11a>
  9d:	c6 40 10 00          	movb   $0x0,0x10(%rax)
  a1:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
  a8:	00 
  a9:	bf 20 00 00 00       	mov    $0x20,%edi
  ae:	e8 00 00 00 00       	callq  b3 <cache_init+0xb3>
  b3:	48 85 c0             	test   %rax,%rax
  b6:	48 89 c3             	mov    %rax,%rbx
  b9:	48 89 45 18          	mov    %rax,0x18(%rbp)
  bd:	74 5b                	je     11a <cache_init+0x11a>
  bf:	c6 40 10 00          	movb   $0x0,0x10(%rax)
  c3:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
  ca:	00 
  cb:	bf 20 00 00 00       	mov    $0x20,%edi
  d0:	e8 00 00 00 00       	callq  d5 <cache_init+0xd5>
  d5:	48 85 c0             	test   %rax,%rax
  d8:	48 89 43 18          	mov    %rax,0x18(%rbx)
  dc:	74 3c                	je     11a <cache_init+0x11a>
  de:	49 83 c4 08          	add    $0x8,%r12
  e2:	c6 40 10 00          	movb   $0x0,0x10(%rax)
  e6:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
  ed:	00 
  ee:	49 81 fc 00 20 00 00 	cmp    $0x2000,%r12
  f5:	0f 85 65 ff ff ff    	jne    60 <cache_init+0x60>
  fb:	c7 05 00 00 00 00 02 	movl   $0x2,0x0(%rip)        # 105 <cache_init+0x105>
 102:	00 00 00 
 105:	c7 05 00 00 00 00 0a 	movl   $0xa,0x0(%rip)        # 10f <cache_init+0x10f>
 10c:	00 00 00 
 10f:	48 83 c4 08          	add    $0x8,%rsp
 113:	5b                   	pop    %rbx
 114:	5d                   	pop    %rbp
 115:	41 5c                	pop    %r12
 117:	41 5d                	pop    %r13
 119:	c3                   	retq   
 11a:	bf 00 00 00 00       	mov    $0x0,%edi
 11f:	31 c0                	xor    %eax,%eax
 121:	e8 00 00 00 00       	callq  126 <cache_init+0x126>
 126:	e8 00 00 00 00       	callq  12b <cache_init+0x12b>
 12b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000130 <flush_cache>:
 130:	8b 15 00 00 00 00    	mov    0x0(%rip),%edx        # 136 <flush_cache+0x6>
 136:	85 d2                	test   %edx,%edx
 138:	7e 49                	jle    183 <flush_cache+0x53>
 13a:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 141 <flush_cache+0x11>
 141:	83 ea 01             	sub    $0x1,%edx
 144:	8b 35 00 00 00 00    	mov    0x0(%rip),%esi        # 14a <flush_cache+0x1a>
 14a:	48 8d 78 08          	lea    0x8(%rax),%rdi
 14e:	4c 8d 04 d7          	lea    (%rdi,%rdx,8),%r8
 152:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
 158:	85 f6                	test   %esi,%esi
 15a:	7e 19                	jle    175 <flush_cache+0x45>
 15c:	31 d2                	xor    %edx,%edx
 15e:	66 90                	xchg   %ax,%ax
 160:	48 8b 08             	mov    (%rax),%rcx
 163:	83 c2 01             	add    $0x1,%edx
 166:	c6 41 10 00          	movb   $0x0,0x10(%rcx)
 16a:	48 8b 00             	mov    (%rax),%rax
 16d:	48 83 c0 18          	add    $0x18,%rax
 171:	39 f2                	cmp    %esi,%edx
 173:	75 eb                	jne    160 <flush_cache+0x30>
 175:	4c 39 c7             	cmp    %r8,%rdi
 178:	48 89 f8             	mov    %rdi,%rax
 17b:	74 06                	je     183 <flush_cache+0x53>
 17d:	48 83 c7 08          	add    $0x8,%rdi
 181:	eb d5                	jmp    158 <flush_cache+0x28>
 183:	f3 c3                	repz retq 
 185:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
 18c:	00 00 00 00 

0000000000000190 <access_cache>:
 190:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 196 <access_cache+0x6>
 196:	8b 0d 00 00 00 00    	mov    0x0(%rip),%ecx        # 19c <access_cache+0xc>
 19c:	49 89 f8             	mov    %rdi,%r8
 19f:	48 83 05 00 00 00 00 	addq   $0x1,0x0(%rip)        # 1a7 <access_cache+0x17>
 1a6:	01 
 1a7:	01 c1                	add    %eax,%ecx
 1a9:	49 d3 e8             	shr    %cl,%r8
 1ac:	89 c1                	mov    %eax,%ecx
 1ae:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 1b4 <access_cache+0x24>
 1b4:	48 d3 ef             	shr    %cl,%rdi
 1b7:	83 e8 01             	sub    $0x1,%eax
 1ba:	21 f8                	and    %edi,%eax
 1bc:	4c 63 d0             	movslq %eax,%r10
 1bf:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 1c6 <access_cache+0x36>
 1c6:	4e 8d 0c d0          	lea    (%rax,%r10,8),%r9
 1ca:	49 8b 39             	mov    (%r9),%rdi
 1cd:	48 85 ff             	test   %rdi,%rdi
 1d0:	0f 84 7e 01 00 00    	je     354 <access_cache+0x1c4>
 1d6:	48 89 f8             	mov    %rdi,%rax
 1d9:	4c 89 ce             	mov    %r9,%rsi
 1dc:	eb 09                	jmp    1e7 <access_cache+0x57>
 1de:	66 90                	xchg   %ax,%ax
 1e0:	48 8d 70 18          	lea    0x18(%rax),%rsi
 1e4:	48 89 d0             	mov    %rdx,%rax
 1e7:	0f b6 48 10          	movzbl 0x10(%rax),%ecx
 1eb:	84 c9                	test   %cl,%cl
 1ed:	74 09                	je     1f8 <access_cache+0x68>
 1ef:	4c 39 00             	cmp    %r8,(%rax)
 1f2:	0f 84 38 01 00 00    	je     330 <access_cache+0x1a0>
 1f8:	48 8b 50 18          	mov    0x18(%rax),%rdx
 1fc:	48 85 d2             	test   %rdx,%rdx
 1ff:	75 df                	jne    1e0 <access_cache+0x50>
 201:	55                   	push   %rbp
 202:	53                   	push   %rbx
 203:	48 8b 1d 00 00 00 00 	mov    0x0(%rip),%rbx        # 20a <access_cache+0x7a>
 20a:	48 85 db             	test   %rbx,%rbx
 20d:	0f 84 f3 00 00 00    	je     306 <access_cache+0x176>
 213:	48 89 da             	mov    %rbx,%rdx
 216:	eb 15                	jmp    22d <access_cache+0x9d>
 218:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 21f:	00 
 220:	48 8b 52 18          	mov    0x18(%rdx),%rdx
 224:	48 85 d2             	test   %rdx,%rdx
 227:	0f 84 93 00 00 00    	je     2c0 <access_cache+0x130>
 22d:	80 7a 10 00          	cmpb   $0x0,0x10(%rdx)
 231:	74 ed                	je     220 <access_cache+0x90>
 233:	4c 39 02             	cmp    %r8,(%rdx)
 236:	75 e8                	jne    220 <access_cache+0x90>
 238:	4c 3b 52 08          	cmp    0x8(%rdx),%r10
 23c:	75 e2                	jne    220 <access_cache+0x90>
 23e:	48 89 f8             	mov    %rdi,%rax
 241:	49 89 f8             	mov    %rdi,%r8
 244:	eb 10                	jmp    256 <access_cache+0xc6>
 246:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 24d:	00 00 00 
 250:	48 89 c8             	mov    %rcx,%rax
 253:	49 89 f0             	mov    %rsi,%r8
 256:	48 8b 48 18          	mov    0x18(%rax),%rcx
 25a:	48 89 c6             	mov    %rax,%rsi
 25d:	48 85 c9             	test   %rcx,%rcx
 260:	75 ee                	jne    250 <access_cache+0xc0>
 262:	48 39 d3             	cmp    %rdx,%rbx
 265:	48 89 de             	mov    %rbx,%rsi
 268:	75 09                	jne    273 <access_cache+0xe3>
 26a:	e9 ee 00 00 00       	jmpq   35d <access_cache+0x1cd>
 26f:	90                   	nop
 270:	48 89 ce             	mov    %rcx,%rsi
 273:	48 8b 4e 18          	mov    0x18(%rsi),%rcx
 277:	48 39 d1             	cmp    %rdx,%rcx
 27a:	75 f4                	jne    270 <access_cache+0xe0>
 27c:	48 8b 4a 18          	mov    0x18(%rdx),%rcx
 280:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 287 <access_cache+0xf7>
 287:	48 89 4e 18          	mov    %rcx,0x18(%rsi)
 28b:	48 89 58 18          	mov    %rbx,0x18(%rax)
 28f:	49 39 c0             	cmp    %rax,%r8
 292:	74 08                	je     29c <access_cache+0x10c>
 294:	49 c7 40 18 00 00 00 	movq   $0x0,0x18(%r8)
 29b:	00 
 29c:	31 c0                	xor    %eax,%eax
 29e:	83 3d 00 00 00 00 02 	cmpl   $0x2,0x0(%rip)        # 2a5 <access_cache+0x115>
 2a5:	48 0f 4d c7          	cmovge %rdi,%rax
 2a9:	48 89 42 18          	mov    %rax,0x18(%rdx)
 2ad:	49 89 11             	mov    %rdx,(%r9)
 2b0:	b8 01 00 00 00       	mov    $0x1,%eax
 2b5:	eb 6d                	jmp    324 <access_cache+0x194>
 2b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 2be:	00 00 
 2c0:	84 c9                	test   %cl,%cl
 2c2:	48 89 da             	mov    %rbx,%rdx
 2c5:	48 89 dd             	mov    %rbx,%rbp
 2c8:	75 0c                	jne    2d6 <access_cache+0x146>
 2ca:	eb 3a                	jmp    306 <access_cache+0x176>
 2cc:	0f 1f 40 00          	nopl   0x0(%rax)
 2d0:	48 89 fa             	mov    %rdi,%rdx
 2d3:	4c 89 dd             	mov    %r11,%rbp
 2d6:	48 8b 7a 18          	mov    0x18(%rdx),%rdi
 2da:	49 89 d3             	mov    %rdx,%r11
 2dd:	48 85 ff             	test   %rdi,%rdi
 2e0:	75 ee                	jne    2d0 <access_cache+0x140>
 2e2:	48 8b 38             	mov    (%rax),%rdi
 2e5:	88 4a 10             	mov    %cl,0x10(%rdx)
 2e8:	48 8b 48 08          	mov    0x8(%rax),%rcx
 2ec:	48 89 5a 18          	mov    %rbx,0x18(%rdx)
 2f0:	48 89 15 00 00 00 00 	mov    %rdx,0x0(%rip)        # 2f7 <access_cache+0x167>
 2f7:	48 c7 45 18 00 00 00 	movq   $0x0,0x18(%rbp)
 2fe:	00 
 2ff:	48 89 3a             	mov    %rdi,(%rdx)
 302:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
 306:	c6 40 10 01          	movb   $0x1,0x10(%rax)
 30a:	4c 89 00             	mov    %r8,(%rax)
 30d:	4c 89 50 08          	mov    %r10,0x8(%rax)
 311:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
 318:	49 8b 11             	mov    (%r9),%rdx
 31b:	48 89 50 18          	mov    %rdx,0x18(%rax)
 31f:	49 89 01             	mov    %rax,(%r9)
 322:	31 c0                	xor    %eax,%eax
 324:	5b                   	pop    %rbx
 325:	5d                   	pop    %rbp
 326:	c3                   	retq   
 327:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 32e:	00 00 
 330:	48 83 05 00 00 00 00 	addq   $0x1,0x0(%rip)        # 338 <access_cache+0x1a8>
 337:	01 
 338:	49 39 f1             	cmp    %rsi,%r9
 33b:	74 1a                	je     357 <access_cache+0x1c7>
 33d:	48 8b 50 18          	mov    0x18(%rax),%rdx
 341:	48 89 16             	mov    %rdx,(%rsi)
 344:	49 8b 11             	mov    (%r9),%rdx
 347:	48 89 50 18          	mov    %rdx,0x18(%rax)
 34b:	49 89 01             	mov    %rax,(%r9)
 34e:	b8 01 00 00 00       	mov    $0x1,%eax
 353:	c3                   	retq   
 354:	31 c0                	xor    %eax,%eax
 356:	c3                   	retq   
 357:	b8 01 00 00 00       	mov    $0x1,%eax
 35c:	c3                   	retq   
 35d:	48 8b 4a 18          	mov    0x18(%rdx),%rcx
 361:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 368 <access_cache+0x1d8>
 368:	48 89 48 18          	mov    %rcx,0x18(%rax)
 36c:	e9 1e ff ff ff       	jmpq   28f <access_cache+0xff>
 371:	66 66 66 66 66 66 2e 	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
 378:	0f 1f 84 00 00 00 00 
 37f:	00 

0000000000000380 <printCacheDescription>:
 380:	bf 00 00 00 00       	mov    $0x0,%edi
 385:	31 c0                	xor    %eax,%eax
 387:	e9 00 00 00 00       	jmpq   38c <printCacheDescription+0xc>
